{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Wallet",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost/v2"
    },
    {
      "url": "http://localhost/v2"
    }
  ],
  "tags": [
    {
      "name": "transaction",
      "description": "Everything about your transactions"
    },
    {
      "name": "wallet",
      "description": "Operations about wallet"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "rate",
      "description": "Operations about rate"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets a list of users",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "requestBody": {
          "description": "The user to create.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/wallets": {
      "post": {
        "tags": [
          "wallet"
        ],
        "summary": "Create wallet",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wallet"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/wallets/{address}": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Get wallet by address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "address for search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wallet"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/wallets/{address}/transactions": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Get wallet by address",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "address",
            "in": "path",
            "description": "address for search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "transaction"
        ],
        "summary": "Get transactions",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "transaction"
        ],
        "summary": "Create transaction",
        "requestBody": {
          "description": "The transaction to create.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "credit_address",
                  "debit_address"
                ],
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer"
                  },
                  "debit_address": {
                    "type": "string"
                  },
                  "credit_address": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "transaction"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "wallet": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer"
          },
          "Address": {
            "type": "string"
          },
          "UserId": {
            "type": "integer"
          },
          "Balance": {
            "type": "integer"
          }
        }
      },
      "transaction": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer"
          },
          "Amount": {
            "type": "integer"
          },
          "FeeAmount": {
            "type": "integer"
          },
          "CreditUserId": {
            "type": "integer"
          },
          "CreditAddress": {
            "type": "string"
          },
          "DebitUserId": {
            "type": "integer"
          },
          "DebitAddress": {
            "type": "string"
          },
          "FeeAddress": {
            "type": "string"
          }
        }
      },
      "error": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "offsetParam": {
        "name": "offset",
        "in": "query",
        "description": "The number of items to skip before starting to collect the result set.",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "The numbers of items to return.",
        "schema": {
          "maximum": 50,
          "minimum": 1,
          "type": "integer",
          "default": 20
        }
      }
    }
  }
}